name: Go package

on:
  push:
    paths:
      - '*.go'
      - 'go.mod'
      - 'go.sum'
      - 'vendor/**'
      - '.github/workflows/go.yml'
  pull_request:
    paths:
      - '*.go'
      - 'go.mod'
      - 'go.sum'
      - 'vendor/**'
      - '.github/workflows/go.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.3

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install dependencies
        run: go get -v -t -d ./...

      - name: Test
        run: |
          go test -v ./...
          go test -fuzz=Fuzz -v -fuzztime 20s ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOARCH: [amd64]
        GOOS: [linux, windows, darwin]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.3
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Build
        run: |
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o ai.${{ matrix.GOOS }}-${{ matrix.GOARCH }} ./...
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bin
          path: ai.${{ matrix.GOOS }}-${{ matrix.GOARCH }}
      
  Release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./bin/ai.*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}